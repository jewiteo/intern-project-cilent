{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jewi\\\\test-frontend\\\\src\\\\AcronymList.js\";\nimport React, { Component } from \"react\";\nimport { Button, ButtonGroup, Container, Table } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\n\nclass AcronymList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      acronyms: [],\n      isLoading: true\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/acronym/all');\n    const body = await response.json();\n    console.log(body);\n    this.setState({\n      acronyms: body,\n      isLoading: false\n    });\n  }\n\n  async remove(id) {\n    await fetch('/api/acronym/all/' + id, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      let updatedGroups = [...this.state.acronyms].filter(i => i.id !== id);\n      this.setState({\n        acronyms: updatedGroups\n      });\n    });\n  }\n\n  render() {\n    const {\n      acronyms,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 20\n        }\n      }, \"Loading... \");\n    }\n    /* const AcronymList = acronyms.map(acronym => {\r\n         \r\n         return (<tr key={acronym.id}>\r\n             <td>{acronym.acronym}</td>\r\n             <td>{acronym.full_term}</td>\r\n             <td>{acronym.remark || ''}</td>\r\n               <td>\r\n                 <ButtonGroup>\r\n                     <Button size=\"sm\" variant=\"danger\" onClick={() => this.remove(acronym.id)}>Delete</Button>\r\n                 </ButtonGroup>\r\n             </td>\r\n           </tr>);\r\n       });\r\n         return (\r\n         <div>\r\n             <Container fluid>\r\n                 <Button variant=\"success\" className=\"float-right\">Add Acronym</Button>\r\n                 <h2>Acronym List</h2>\r\n                 <Table>\r\n                     <thead>\r\n                         <tr>\r\n                             <th width=\"20%\">Acronym</th>\r\n                             <th width=\"20%\">Full Term</th>\r\n                             <th>Remark</th>\r\n                             <th width=\"10%\">Actions</th>\r\n                           </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                         {AcronymList}\r\n                     </tbody>\r\n                 </Table>\r\n             </Container>\r\n         </div>\r\n     );\r\n      */\n\n\n    const data = [acronyms];\n    const columns = [{\n      dataField: 'acronym',\n      text: 'Acronym'\n    }, {\n      dataField: 'full_term',\n      text: 'Full Term'\n    }, {\n      dataField: 'remark',\n      text: 'Remarks'\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      className: \"float-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }\n    }, \"Add Acronym\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, \"Acronym List\"), /*#__PURE__*/React.createElement(BootstrapTable, {\n      keyField: \"id\",\n      data: data,\n      columns: columns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nexport default AcronymList;","map":{"version":3,"sources":["C:/Users/Jewi/test-frontend/src/AcronymList.js"],"names":["React","Component","Button","ButtonGroup","Container","Table","BootstrapTable","AcronymList","constructor","props","state","acronyms","isLoading","componentDidMount","response","fetch","body","json","console","log","setState","remove","id","method","headers","then","updatedGroups","filter","i","render","data","columns","dataField","text"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,WAAjB,EAA8BC,SAA9B,EAAyCC,KAAzC,QAAsD,iBAAtD;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;AAGA,MAAMC,WAAN,SAA0BN,SAA1B,CAAoC;AAEhCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,SAAS,EAAE;AAA3B,KAAb;AACH;;AAED,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAKI,QAAL,CAAc;AAAET,MAAAA,QAAQ,EAAEK,IAAZ;AAAkBJ,MAAAA,SAAS,EAAE;AAA7B,KAAd;AACH;;AAED,QAAMS,MAAN,CAAaC,EAAb,EAAiB;AAEb,UAAMP,KAAK,CAAC,sBAAoBO,EAArB,EAAyB;AAChCC,MAAAA,MAAM,EAAE,QADwB;AAEhCC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAFuB,KAAzB,CAAL,CAMHC,IANG,CAME,MAAM;AACV,UAAIC,aAAa,GAAG,CAAC,GAAG,KAAKhB,KAAL,CAAWC,QAAf,EAAyBgB,MAAzB,CAAgCC,CAAC,IAAIA,CAAC,CAACN,EAAF,KAASA,EAA9C,CAApB;AACA,WAAKF,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAAEe;AAAZ,OAAd;AACH,KATK,CAAN;AAWH;;AAIDG,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAElB,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA0B,KAAKF,KAArC;;AAEA,QAAIE,SAAJ,EAAe;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CC,UAAMkB,IAAI,GAAG,CAACnB,QAAD,CAAb;AAEA,UAAMoB,OAAO,GAAG,CAAC;AACbC,MAAAA,SAAS,EAAE,SADE;AAEbC,MAAAA,IAAI,EAAE;AAFO,KAAD,EAGb;AACCD,MAAAA,SAAS,EAAE,WADZ;AAECC,MAAAA,IAAI,EAAE;AAFP,KAHa,EAMb;AACCD,MAAAA,SAAS,EAAE,QADZ;AAECC,MAAAA,IAAI,EAAE;AAFP,KANa,CAAhB;AAWA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,SAAS,EAAC,aAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAGI,oBAAC,cAAD;AAAgB,MAAA,QAAQ,EAAC,IAAzB;AAA8B,MAAA,IAAI,EAAEH,IAApC;AAA0C,MAAA,OAAO,EAAGC,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADJ,CADJ;AAaH;;AA5G+B;;AAgHpC,eAAexB,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, ButtonGroup, Container, Table } from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\n\r\n\r\nclass AcronymList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { acronyms: [], isLoading: true };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('/api/acronym/all')\r\n        const body = await response.json();\r\n        console.log(body);\r\n        this.setState({ acronyms: body, isLoading: false });\r\n    }\r\n\r\n    async remove(id) {\r\n\r\n        await fetch('/api/acronym/all/'+id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n            let updatedGroups = [...this.state.acronyms].filter(i => i.id !== id);\r\n            this.setState({ acronyms: updatedGroups });\r\n        });\r\n\r\n    }\r\n\r\n  \r\n\r\n    render() {\r\n\r\n        const { acronyms, isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <p>Loading... </p>;\r\n        }\r\n\r\n       /* const AcronymList = acronyms.map(acronym => {\r\n            \r\n            return (<tr key={acronym.id}>\r\n                <td>{acronym.acronym}</td>\r\n                <td>{acronym.full_term}</td>\r\n                <td>{acronym.remark || ''}</td>\r\n\r\n                <td>\r\n                    <ButtonGroup>\r\n                        <Button size=\"sm\" variant=\"danger\" onClick={() => this.remove(acronym.id)}>Delete</Button>\r\n                    </ButtonGroup>\r\n                </td>\r\n\r\n            </tr>);\r\n\r\n        });\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <Button variant=\"success\" className=\"float-right\">Add Acronym</Button>\r\n                    <h2>Acronym List</h2>\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th width=\"20%\">Acronym</th>\r\n                                <th width=\"20%\">Full Term</th>\r\n                                <th>Remark</th>\r\n                                <th width=\"10%\">Actions</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {AcronymList}\r\n                        </tbody>\r\n                    </Table>\r\n                </Container>\r\n            </div>\r\n        );\r\n         */\r\n\r\n\r\n        const data = [acronyms];\r\n\r\n        const columns = [{\r\n            dataField: 'acronym',\r\n            text: 'Acronym'\r\n        }, {\r\n            dataField: 'full_term',\r\n            text: 'Full Term'\r\n        }, {\r\n            dataField: 'remark',\r\n            text: 'Remarks'\r\n            }];\r\n\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <Button variant=\"success\" className=\"float-right\">Add Acronym</Button>\r\n                    <h2>Acronym List</h2>\r\n                    <BootstrapTable keyField='id' data={data} columns={ columns }/>\r\n                </Container>\r\n            </div>\r\n\r\n\r\n            \r\n            )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default AcronymList;"]},"metadata":{},"sourceType":"module"}