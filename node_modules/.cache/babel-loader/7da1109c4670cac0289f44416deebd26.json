{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jewi\\\\test-frontend\\\\src\\\\AcronymList.js\";\nimport React, { Component } from \"react\";\nimport { Button, Container, Form } from 'react-bootstrap';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\n\nclass AcronymList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.buttonDelete = (cell, row, rowIndex, formatExtraData) => {\n      return /*#__PURE__*/React.createElement(Button, {\n        size: \"sm\",\n        variant: \"danger\",\n        onClick: () => this.remove(row.id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }\n      }, \"Delete\");\n    };\n\n    this.showAddAcronym = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(Form, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"it works\"), /*#__PURE__*/React.createElement(Form.Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }\n      }, \"row 2 works\")));\n    };\n\n    this.state = {\n      acronyms: [],\n      isLoading: true,\n      isAdding: false\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch('/api/acronym/all');\n    const body = await response.json();\n    console.log(body);\n    this.setState({\n      acronyms: body,\n      isLoading: false\n    });\n  }\n\n  async remove(id) {\n    await fetch('/api/acronym/all/' + id, {\n      method: 'DELETE',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      }\n    }).then(() => {\n      let updatedAcronyms = [...this.state.acronyms].filter(i => i.id !== id);\n      this.setState({\n        acronyms: updatedAcronyms\n      });\n    });\n  }\n\n  async addNewAcronym() {\n    const newAcronym = {\n      acronym: \"test\",\n      full_term: \"test - full term\"\n    };\n    await fetch('api/acronym/new', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newAcronym)\n    });\n    const response = await fetch('/api/acronym/all');\n    const body = await response.json();\n    console.log(body);\n    this.setState({\n      acronyms: body\n    });\n  }\n\n  render() {\n    const {\n      acronyms,\n      isLoading\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 20\n        }\n      }, \"Loading... \");\n    } //Using normal Table from React Bootstrap\n\n    /* const AcronymList = acronyms.map(acronym => {\r\n         \r\n         return (<tr key={acronym.id}>\r\n             <td>{acronym.acronym}</td>\r\n             <td>{acronym.full_term}</td>\r\n             <td>{acronym.remark || ''}</td>\r\n               <td>\r\n                 <ButtonGroup>\r\n                     <Button size=\"sm\" variant=\"danger\" onClick={() => this.remove(acronym.id)}>Delete</Button>\r\n                 </ButtonGroup>\r\n             </td>\r\n           </tr>);\r\n       });\r\n         return (\r\n         <div>\r\n             <Container fluid>\r\n                 <Button variant=\"success\" className=\"float-right\">Add Acronym</Button>\r\n                 <h2>Acronym List</h2>\r\n                 <Table>\r\n                     <thead>\r\n                         <tr>\r\n                             <th width=\"20%\">Acronym</th>\r\n                             <th width=\"20%\">Full Term</th>\r\n                             <th>Remark</th>\r\n                             <th width=\"10%\">Actions</th>\r\n                           </tr>\r\n                     </thead>\r\n                     <tbody>\r\n                         {AcronymList}\r\n                     </tbody>\r\n                 </Table>\r\n             </Container>\r\n         </div>\r\n     );\r\n      */\n    //Using React Bootstrap Table 2\n    // <BootstrapTable keyField='id' data={data} columns={ columns }/>\n\n\n    const {\n      SearchBar\n    } = Search;\n    const data = acronyms;\n    const columns = [{\n      dataField: 'id',\n      text: 'acronym id',\n      hidden: true\n    }, {\n      dataField: 'acronym',\n      text: 'Acronym'\n    }, {\n      dataField: 'full_term',\n      text: 'Full Term'\n    }, {\n      dataField: 'remark',\n      text: 'Remarks'\n    }, {\n      dataField: 'actions',\n      text: 'Actions',\n      formatter: this.buttonDelete\n    }];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      fluid: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"success\",\n      className: \"float-right\",\n      onClick: () => {\n        this.state.isAdding = true;\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 21\n      }\n    }, \"Add Acronym\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }, \"Acronym List\"), this.state.isAdding ? this.showAddAcronym : null, /*#__PURE__*/React.createElement(ToolkitProvider, {\n      keyField: \"id\",\n      data: data,\n      columns: columns,\n      search: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 21\n      }\n    }, props => /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 37\n      }\n    }, \"Search Bar\"), /*#__PURE__*/React.createElement(SearchBar, Object.assign({}, props.searchProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 37\n      }\n    }))))));\n  }\n\n}\n\nexport default AcronymList;","map":{"version":3,"sources":["C:/Users/Jewi/test-frontend/src/AcronymList.js"],"names":["React","Component","Button","Container","Form","BootstrapTable","ToolkitProvider","Search","AcronymList","constructor","props","buttonDelete","cell","row","rowIndex","formatExtraData","remove","id","showAddAcronym","state","acronyms","isLoading","isAdding","componentDidMount","response","fetch","body","json","console","log","setState","method","headers","then","updatedAcronyms","filter","i","addNewAcronym","newAcronym","acronym","full_term","JSON","stringify","render","SearchBar","data","columns","dataField","text","hidden","formatter","searchProps","baseProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,IAA5B,QAAwC,iBAAxC;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,eAAP,IAA0BC,MAA1B,QAAwC,gCAAxC;;AAIA,MAAMC,WAAN,SAA0BP,SAA1B,CAAoC;AAEhCQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAiDnBC,YAjDmB,GAiDJ,CAACC,IAAD,EAAOC,GAAP,EAAYC,QAAZ,EAAsBC,eAAtB,KAA0C;AACrD,0BACI,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,IAAb;AAAkB,QAAA,OAAO,EAAC,QAA1B;AAAmC,QAAA,OAAO,EAAE,MAAM,KAAKC,MAAL,CAAYH,GAAG,CAACI,EAAhB,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,KArDkB;;AAAA,SAwDnBC,cAxDmB,GAwDF,MAAM;AACnB,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAJJ,CADJ,CADJ;AAYH,KArEkB;;AAEf,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,SAAS,EAAE,IAA3B;AAAiCC,MAAAA,QAAQ,EAAE;AAA3C,KAAb;AACH;;AAED,QAAMC,iBAAN,GAA0B;AACtB,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAKI,QAAL,CAAc;AAAEV,MAAAA,QAAQ,EAAEM,IAAZ;AAAkBL,MAAAA,SAAS,EAAE;AAA7B,KAAd;AACH;;AAED,QAAML,MAAN,CAAaC,EAAb,EAAiB;AAEb,UAAMQ,KAAK,CAAC,sBAAoBR,EAArB,EAAyB;AAChCc,MAAAA,MAAM,EAAE,QADwB;AAEhCC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX;AAFuB,KAAzB,CAAL,CAMHC,IANG,CAME,MAAM;AACV,UAAIC,eAAe,GAAG,CAAC,GAAG,KAAKf,KAAL,CAAWC,QAAf,EAAyBe,MAAzB,CAAgCC,CAAC,IAAIA,CAAC,CAACnB,EAAF,KAASA,EAA9C,CAAtB;AACA,WAAKa,QAAL,CAAc;AAAEV,QAAAA,QAAQ,EAAEc;AAAZ,OAAd;AACH,KATK,CAAN;AAWH;;AAED,QAAMG,aAAN,GAAsB;AAElB,UAAMC,UAAU,GAAG;AACfC,MAAAA,OAAO,EAAE,MADM;AAEfC,MAAAA,SAAS,EAAE;AAFI,KAAnB;AAKA,UAAMf,KAAK,CAAC,iBAAD,EAAoB;AAC3BM,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAE;AACL,kBAAU,kBADL;AAEL,wBAAgB;AAFX,OAFkB;AAM3BN,MAAAA,IAAI,EAAEe,IAAI,CAACC,SAAL,CAAeJ,UAAf;AANqB,KAApB,CAAX;AASA,UAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,SAAKI,QAAL,CAAc;AAAEV,MAAAA,QAAQ,EAAEM;AAAZ,KAAd;AACH;;AA0BDiB,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEvB,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA0B,KAAKF,KAArC;;AAEA,QAAIE,SAAJ,EAAe;AACX,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH,KANI,CAQN;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CC;AAEA;;;AAEA,UAAM;AAAEuB,MAAAA;AAAF,QAAgBrC,MAAtB;AACA,UAAMsC,IAAI,GAAGzB,QAAb;AACA,UAAM0B,OAAO,GAAG,CAAC;AACbC,MAAAA,SAAS,EAAE,IADE;AAEbC,MAAAA,IAAI,EAAE,YAFO;AAGbC,MAAAA,MAAM,EAAE;AAHK,KAAD,EAIb;AACCF,MAAAA,SAAS,EAAE,SADZ;AAECC,MAAAA,IAAI,EAAE;AAFP,KAJa,EAOb;AACCD,MAAAA,SAAS,EAAE,WADZ;AAECC,MAAAA,IAAI,EAAE;AAFP,KAPa,EAUb;AACCD,MAAAA,SAAS,EAAE,QADZ;AAECC,MAAAA,IAAI,EAAE;AAFP,KAVa,EAab;AACKD,MAAAA,SAAS,EAAE,SADhB;AAEKC,MAAAA,IAAI,EAAE,SAFX;AAGKE,MAAAA,SAAS,EAAE,KAAKvC;AAHrB,KAba,CAAhB;AAmBA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,SAAhB;AAA0B,MAAA,SAAS,EAAC,aAApC;AAAkD,MAAA,OAAO,EAAE,MAAM;AAAE,aAAKQ,KAAL,CAAWG,QAAX,GAAsB,IAAtB;AAA4B,OAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAIK,KAAKH,KAAL,CAAWG,QAAX,GAAsB,KAAKJ,cAA3B,GAA4C,IAJjD,eAMI,oBAAC,eAAD;AACI,MAAA,QAAQ,EAAC,IADb;AAEI,MAAA,IAAI,EAAE2B,IAFV;AAGI,MAAA,OAAO,EAAEC,OAHb;AAII,MAAA,MAAM,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOQpC,KAAK,iBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,oBAAC,SAAD,oBAAeA,KAAK,CAACyC,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,eAII,oBAAC,cAAD,oBACQzC,KAAK,CAAC0C,SADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJJ,CARZ,CANJ,CADJ,CADJ;AA+BH;;AAtL+B;;AA0LpC,eAAe5C,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, Container, Form } from 'react-bootstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport ToolkitProvider, { Search } from 'react-bootstrap-table2-toolkit';\r\n\r\n\r\n\r\nclass AcronymList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { acronyms: [], isLoading: true, isAdding: false };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch('/api/acronym/all')\r\n        const body = await response.json();\r\n        console.log(body);\r\n        this.setState({ acronyms: body, isLoading: false });\r\n    }\r\n\r\n    async remove(id) {\r\n\r\n        await fetch('/api/acronym/all/'+id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(() => {\r\n            let updatedAcronyms = [...this.state.acronyms].filter(i => i.id !== id);\r\n            this.setState({ acronyms: updatedAcronyms });\r\n        });\r\n\r\n    }\r\n\r\n    async addNewAcronym() {\r\n\r\n        const newAcronym = {\r\n            acronym: \"test\",\r\n            full_term: \"test - full term\"\r\n        };\r\n\r\n        await fetch('api/acronym/new', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newAcronym),\r\n        });\r\n\r\n        const response = await fetch('/api/acronym/all')\r\n        const body = await response.json();\r\n        console.log(body);\r\n        this.setState({ acronyms: body});\r\n    }\r\n\r\n    buttonDelete = (cell, row, rowIndex, formatExtraData) => {\r\n        return (\r\n            <Button size=\"sm\" variant=\"danger\" onClick={() => this.remove(row.id)}>Delete</Button>\r\n            )\r\n    }  \r\n\r\n\r\n    showAddAcronym = () => {\r\n        return (\r\n            <div>\r\n                <Form>\r\n                    <Form.Row>\r\n                        it works\r\n                    </Form.Row>\r\n                    <Form.Row>\r\n                        row 2 works\r\n                    </Form.Row>\r\n                </Form>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const { acronyms, isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <p>Loading... </p>;\r\n        }\r\n\r\n       //Using normal Table from React Bootstrap\r\n       /* const AcronymList = acronyms.map(acronym => {\r\n            \r\n            return (<tr key={acronym.id}>\r\n                <td>{acronym.acronym}</td>\r\n                <td>{acronym.full_term}</td>\r\n                <td>{acronym.remark || ''}</td>\r\n\r\n                <td>\r\n                    <ButtonGroup>\r\n                        <Button size=\"sm\" variant=\"danger\" onClick={() => this.remove(acronym.id)}>Delete</Button>\r\n                    </ButtonGroup>\r\n                </td>\r\n\r\n            </tr>);\r\n\r\n        });\r\n\r\n\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <Button variant=\"success\" className=\"float-right\">Add Acronym</Button>\r\n                    <h2>Acronym List</h2>\r\n                    <Table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th width=\"20%\">Acronym</th>\r\n                                <th width=\"20%\">Full Term</th>\r\n                                <th>Remark</th>\r\n                                <th width=\"10%\">Actions</th>\r\n\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {AcronymList}\r\n                        </tbody>\r\n                    </Table>\r\n                </Container>\r\n            </div>\r\n        );\r\n         */\r\n\r\n        //Using React Bootstrap Table 2\r\n\r\n        // <BootstrapTable keyField='id' data={data} columns={ columns }/>\r\n\r\n        const { SearchBar } = Search;\r\n        const data = acronyms;\r\n        const columns = [{\r\n            dataField: 'id',\r\n            text: 'acronym id', \r\n            hidden: true\r\n        }, {\r\n            dataField: 'acronym',\r\n            text: 'Acronym'\r\n        }, {\r\n            dataField: 'full_term',\r\n            text: 'Full Term'\r\n        }, {\r\n            dataField: 'remark',\r\n            text: 'Remarks'\r\n        }, {\r\n                dataField: 'actions',\r\n                text: 'Actions',\r\n                formatter: this.buttonDelete\r\n            }];\r\n\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <Button variant=\"success\" className=\"float-right\" onClick={() => { this.state.isAdding = true }}>Add Acronym</Button>\r\n                    <h2>Acronym List</h2>\r\n\r\n                    {this.state.isAdding ? this.showAddAcronym : null}\r\n\r\n                    <ToolkitProvider\r\n                        keyField=\"id\"\r\n                        data={data}\r\n                        columns={columns}\r\n                        search\r\n                    >\r\n                        {\r\n                            props => (\r\n                                <div>\r\n                                    <h3>Search Bar</h3>\r\n                                    <SearchBar {...props.searchProps} />\r\n                                    <hr />\r\n                                    <BootstrapTable\r\n                                        {...props.baseProps}\r\n                                    />\r\n                                </div>\r\n                            )\r\n                        }\r\n                    </ToolkitProvider>\r\n                </Container>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default AcronymList;"]},"metadata":{},"sourceType":"module"}